{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\songbird\\\\src\\\\Components\\\\App\\\\App.js\";\nimport React, { Component } from 'react';\nimport Header from \"../Header/Header\";\nimport Birds from \"../Birds/Birds\";\nimport Answer from \"../Answer/Answer\";\nimport Questions from \"../Questions/Questions\";\nimport birdsData from '../birdsData';\nimport PreLoader from \"../PreLoader/PreLoader\";\nimport GameOver from \"../GameOver/GameOver\";\nimport { Howl } from 'howler';\nimport './App.css';\nimport win from \"../../audio/win.mp3\";\nimport levelUp from '../../audio/lavelUp.mp3';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: birdsData,\n      answer: false,\n      count: 0,\n      loader: true,\n      btn: false,\n      randomBird: Math.floor(Math.random() * 6) + 1,\n      index: 0,\n      gameOver: false\n    };\n    this.count = 0;\n  }\n\n  answerCount(count) {\n    let score = this.state.count;\n    score += count;\n    this.setState({\n      count: score\n    });\n    this.setState({\n      btn: true\n    });\n  }\n\n  answerClick(item) {\n    this.setState({\n      answer: item\n    });\n  }\n\n  Loader() {\n    this.setState({\n      loader: false\n    });\n  }\n\n  onSort() {\n    this.count++;\n    this.setState({\n      randomBird: Math.floor(Math.random() * 6),\n      answerData: this.state.data[Math.floor(Math.random() * 5)][Math.floor(Math.random() * 6)]\n    });\n    [...document.querySelectorAll(\".list-group-item\")].map(item => {\n      item.classList.remove(\"success\");\n      item.classList.remove(\"error\");\n      return item;\n    });\n    this.setState({\n      btn: false,\n      answer: false,\n      index: this.count\n    });\n\n    if (this.count >= 6) {\n      this.setState({\n        gameOver: true\n      });\n      const sound = new Howl({\n        src: [win],\n        autoplay: false,\n        loop: false,\n        volume: 0.5\n      });\n      sound.play();\n    } else {\n      const sound = new Howl({\n        src: [levelUp],\n        autoplay: false,\n        loop: false,\n        volume: 0.5\n      });\n      sound.play();\n    }\n  }\n\n  restartGame() {\n    this.setState({\n      gameOver: false,\n      index: 0,\n      count: 0\n    });\n    this.count = 0;\n  }\n\n  endGame() {\n    this.restartGame();\n    this.setState({\n      loader: true\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.loader && React.createElement(PreLoader, {\n      onLoader: this.Loader.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), !this.state.loader && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Header, {\n      count: this.state.count,\n      index: this.state.index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), !this.state.gameOver && React.createElement(Questions, {\n      data: this.state.data[this.state.randomBird][this.state.randomBird],\n      true2: this.state.btn,\n      answer: this.state.answer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), !this.state.gameOver && React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Birds, {\n      answerCount: this.answerCount.bind(this),\n      answerClick: this.answerClick.bind(this),\n      randomBird: this.state.randomBird,\n      data: this.state.data,\n      error: this.state.btn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Answer, {\n      answer: this.state.answer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: `btn ${this.state.btn ? 'btn-success' : ''}`,\n      disabled: !this.state.btn,\n      onClick: this.onSort.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \" Next Level\")), this.state.gameOver && React.createElement(GameOver, {\n      score: this.state.count,\n      restartGame: this.restartGame.bind(this),\n      endGame: this.endGame.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/User/Desktop/songbird/src/Components/App/App.js"],"names":["React","Component","Header","Birds","Answer","Questions","birdsData","PreLoader","GameOver","Howl","win","levelUp","App","state","data","answer","count","loader","btn","randomBird","Math","floor","random","index","gameOver","answerCount","score","setState","answerClick","item","Loader","onSort","answerData","document","querySelectorAll","map","classList","remove","sound","src","autoplay","loop","volume","play","restartGame","endGame","render","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Header from \"../Header/Header\";\r\nimport Birds from \"../Birds/Birds\";\r\nimport Answer from \"../Answer/Answer\";\r\nimport Questions from \"../Questions/Questions\";\r\nimport birdsData from '../birdsData'\r\nimport PreLoader from \"../PreLoader/PreLoader\";\r\nimport GameOver from \"../GameOver/GameOver\";\r\nimport {Howl} from 'howler';\r\nimport './App.css'\r\nimport win from \"../../audio/win.mp3\";\r\nimport levelUp from '../../audio/lavelUp.mp3'\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        data: birdsData,\r\n        answer: false,\r\n        count: 0,\r\n        loader: true,\r\n        btn: false,\r\n        randomBird: Math.floor(Math.random() * 6) + 1,\r\n        index: 0,\r\n        gameOver: false,\r\n    };\r\n    count = 0;\r\n\r\n\r\n    answerCount(count) {\r\n        let  score = this.state.count;\r\n        score+=count;\r\n        this.setState({count:score});\r\n        this.setState({btn: true})\r\n    }\r\n\r\n    answerClick(item) {\r\n        this.setState({answer: item})\r\n    }\r\n\r\n    Loader() {\r\n        this.setState({loader: false})\r\n    }\r\n\r\n\r\n    onSort() {\r\n        this.count++;\r\n        this.setState({\r\n            randomBird: Math.floor(Math.random() * 6),\r\n            answerData: this.state.data[Math.floor(Math.random() * 5)][Math.floor(Math.random() * 6)]\r\n        });\r\n        [...document.querySelectorAll(\".list-group-item\")].map(item => {\r\n            item.classList.remove(\"success\");\r\n            item.classList.remove(\"error\");\r\n            return item;\r\n        });\r\n        this.setState({\r\n            btn: false,\r\n            answer: false,\r\n            index: this.count\r\n        });\r\n        if (this.count >= 6) {\r\n            this.setState({gameOver: true});\r\n            const sound = new Howl({\r\n                src: [win],\r\n                autoplay: false,\r\n                loop: false,\r\n                volume: 0.5,\r\n            });\r\n            sound.play();\r\n        }else {\r\n            const sound = new Howl({\r\n                src: [levelUp],\r\n                autoplay: false,\r\n                loop: false,\r\n                volume: 0.5,\r\n            });\r\n            sound.play();\r\n        }\r\n    }\r\n\r\n    restartGame(){\r\n        this.setState({\r\n            gameOver:false,\r\n            index:0,\r\n            count:0,\r\n        });\r\n        this.count = 0;\r\n    }\r\n    endGame(){\r\n        this.restartGame();\r\n        this.setState({loader:true})\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.state.loader &&\r\n                <PreLoader onLoader={this.Loader.bind(this)}/>}\r\n                {!this.state.loader &&\r\n                <div>\r\n                    <Header count={this.state.count} index={this.state.index}/>\r\n                    {!this.state.gameOver &&\r\n                    <Questions\r\n                        data={this.state.data[this.state.randomBird][this.state.randomBird]}\r\n                        true2={this.state.btn}\r\n                        answer={this.state.answer}\r\n                    />\r\n                    }\r\n                    {!this.state.gameOver &&\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-md-6\">\r\n                            <Birds\r\n                                answerCount={this.answerCount.bind(this)}\r\n                                answerClick={this.answerClick.bind(this)}\r\n                                randomBird={this.state.randomBird}\r\n                                data={this.state.data}\r\n                                error={this.state.btn}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <Answer answer={this.state.answer}/>\r\n                        </div>\r\n                        <button className={`btn ${this.state.btn ? 'btn-success' : ''}`}\r\n                                disabled={!this.state.btn}\r\n                                onClick={this.onSort.bind(this)}\r\n                        > Next Level\r\n                        </button>\r\n\r\n                    </div>\r\n                    }\r\n                    {this.state.gameOver &&\r\n                    <GameOver score={this.state.count}\r\n                              restartGame={this.restartGame.bind(this)}\r\n                              endGame={this.endGame.bind(this)}\r\n                    />\r\n                    }\r\n                </div>\r\n                }\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}